{
  "id": "e04557d3-cda5-4aca-8e9e-0ecdfac6fc73",
  "prevId": "9137ea77-8ef7-45cd-afa8-db3fa85dd364",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.account": {
      "name": "account",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "providerAccountId": {
          "name": "providerAccountId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "token_type": {
          "name": "token_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "session_state": {
          "name": "session_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "account_userId_user_id_fk": {
          "name": "account_userId_user_id_fk",
          "tableFrom": "account",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.credit_transactions": {
      "name": "credit_transactions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric(19, 4)",
          "primaryKey": false,
          "notNull": true
        },
        "model": {
          "name": "model",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "input_tokens": {
          "name": "input_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "output_tokens": {
          "name": "output_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "total_tokens": {
          "name": "total_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "credit_transactions_user_id_user_id_fk": {
          "name": "credit_transactions_user_id_user_id_fk",
          "tableFrom": "credit_transactions",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.authenticator": {
      "name": "authenticator",
      "schema": "",
      "columns": {
        "credentialID": {
          "name": "credentialID",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "providerAccountId": {
          "name": "providerAccountId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "credentialPublicKey": {
          "name": "credentialPublicKey",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "counter": {
          "name": "counter",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "credentialDeviceType": {
          "name": "credentialDeviceType",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "credentialBackedUp": {
          "name": "credentialBackedUp",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "transports": {
          "name": "transports",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "authenticator_userId_user_id_fk": {
          "name": "authenticator_userId_user_id_fk",
          "tableFrom": "authenticator",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "authenticator_credentialID_unique": {
          "name": "authenticator_credentialID_unique",
          "nullsNotDistinct": false,
          "columns": [
            "credentialID"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.resume": {
      "name": "resume",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "markdown": {
          "name": "markdown",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'\n  # Hello World\n\n  Welcome to your resume!\n\n  You can customize this template to fit your needs.\n\n  ## Using Markdown\n\n  In markdown, you can use headers, lists, bold, italics, and lots of formatting options.\n\n  ### Headers\n\n  Use # for headers.\n\n  ### Lists\n\n  Use * for unordered lists.\n\n  ### Formatting\n\n  Use ** for bold text and * for italic text.\n\n  ### More\n\n  Check out the [Markdown Guide](https://www.markdownguide.org/) for more information.\n\n  ## Using HTML in Markdown\n\n  You can also use HTML tags within markdown to add more complex formatting.\n\n  ### Example\n\n  <div>\n    <h3>Custom Background</h3>\n    <p>This is a paragraph with a custom background color.</p>\n  </div>\n\n  ## Styling HTML in Markdown\n\n  You can style HTML elements using CSS within markdown.\n\n  ### Example\n\n  <div style=\"background-color: #f0f0f0; padding: 10px;\">\n    <h3>Styled Background</h3>\n    <p>This is a paragraph with a styled background color.</p>\n  </div>\n\n  With MarkdownTailor, you can easily style your resume using inline HTML syles\n  as seen above, or you can use css.\n\n  #### Updated HTML\n\n  <div class=\"custom-background custom-text\">\n    <h3>Styled Background</h3>\n    <p>This is a paragraph with a styled background color.</p>\n  </div>\n\n  #### CSS for HTML\n\n  .custom-background {\n    background-color: #f0f0f0;\n    padding: 10px;\n  }\n\n  .custom-text {\n    color: #ff0000;\n    font-weight: bold;\n  }\n  '"
        },
        "css": {
          "name": "css",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'\n  body {\n    margin: 0;\n    padding: 20px;\n    font-family: ''Inter'', -apple-system, BlinkMacSystemFont, ''Segoe UI'', sans-serif;\n    font-size: 14px;\n    line-height: 1.6;\n    color: #333;\n    background: white;\n  }\n\n  h1 {\n    font-size: 24px;\n    margin-bottom: 16px;\n  }\n\n  h2 {\n    font-size: 18px;\n    margin-top: 20px;\n    margin-bottom: 12px;\n  }\n\n  h3 {\n    font-size: 16px;\n    margin-top: 16px;\n    margin-bottom: 8px;\n  }\n\n  h4 {\n    font-size: 14px;\n    margin-top: 14px;\n    margin-bottom: 6px;\n  }\n\n  ul {\n    padding-left: 20px;\n  }\n\n  /* More default styles... */\n'"
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "''"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "resume_userId_user_id_fk": {
          "name": "resume_userId_user_id_fk",
          "tableFrom": "resume",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.resume_versions": {
      "name": "resume_versions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "resume_id": {
          "name": "resume_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "version": {
          "name": "version",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "markdown": {
          "name": "markdown",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'\n  # Hello World\n\n  Welcome to your resume!\n\n  You can customize this template to fit your needs.\n\n  ## Using Markdown\n\n  In markdown, you can use headers, lists, bold, italics, and lots of formatting options.\n\n  ### Headers\n\n  Use # for headers.\n\n  ### Lists\n\n  Use * for unordered lists.\n\n  ### Formatting\n\n  Use ** for bold text and * for italic text.\n\n  ### More\n\n  Check out the [Markdown Guide](https://www.markdownguide.org/) for more information.\n\n  ## Using HTML in Markdown\n\n  You can also use HTML tags within markdown to add more complex formatting.\n\n  ### Example\n\n  <div>\n    <h3>Custom Background</h3>\n    <p>This is a paragraph with a custom background color.</p>\n  </div>\n\n  ## Styling HTML in Markdown\n\n  You can style HTML elements using CSS within markdown.\n\n  ### Example\n\n  <div style=\"background-color: #f0f0f0; padding: 10px;\">\n    <h3>Styled Background</h3>\n    <p>This is a paragraph with a styled background color.</p>\n  </div>\n\n  With MarkdownTailor, you can easily style your resume using inline HTML syles\n  as seen above, or you can use css.\n\n  #### Updated HTML\n\n  <div class=\"custom-background custom-text\">\n    <h3>Styled Background</h3>\n    <p>This is a paragraph with a styled background color.</p>\n  </div>\n\n  #### CSS for HTML\n\n  .custom-background {\n    background-color: #f0f0f0;\n    padding: 10px;\n  }\n\n  .custom-text {\n    color: #ff0000;\n    font-weight: bold;\n  }\n  '"
        },
        "css": {
          "name": "css",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'\n  body {\n    margin: 0;\n    padding: 20px;\n    font-family: ''Inter'', -apple-system, BlinkMacSystemFont, ''Segoe UI'', sans-serif;\n    font-size: 14px;\n    line-height: 1.6;\n    color: #333;\n    background: white;\n  }\n\n  h1 {\n    font-size: 24px;\n    margin-bottom: 16px;\n  }\n\n  h2 {\n    font-size: 18px;\n    margin-top: 20px;\n    margin-bottom: 12px;\n  }\n\n  h3 {\n    font-size: 16px;\n    margin-top: 16px;\n    margin-bottom: 8px;\n  }\n\n  h4 {\n    font-size: 14px;\n    margin-top: 14px;\n    margin-bottom: 6px;\n  }\n\n  ul {\n    padding-left: 20px;\n  }\n\n  /* More default styles... */\n'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "resume_versions_resume_id_resume_id_fk": {
          "name": "resume_versions_resume_id_resume_id_fk",
          "tableFrom": "resume_versions",
          "tableTo": "resume",
          "columnsFrom": [
            "resume_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.session": {
      "name": "session",
      "schema": "",
      "columns": {
        "sessionToken": {
          "name": "sessionToken",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "session_userId_user_id_fk": {
          "name": "session_userId_user_id_fk",
          "tableFrom": "session",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user": {
      "name": "user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'ResumeBuilder'"
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "stripe_customer_id": {
          "name": "stripe_customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "emailVerified": {
          "name": "emailVerified",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "model_preference": {
          "name": "model_preference",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'o4-mini'"
        },
        "provider_preference": {
          "name": "provider_preference",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'openai'"
        },
        "alpha_credits_redeemed": {
          "name": "alpha_credits_redeemed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "credits": {
          "name": "credits",
          "type": "numeric(19, 4)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.00'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_email_unique": {
          "name": "user_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        },
        "user_stripe_customer_id_unique": {
          "name": "user_stripe_customer_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "stripe_customer_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.verificationToken": {
      "name": "verificationToken",
      "schema": "",
      "columns": {
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}